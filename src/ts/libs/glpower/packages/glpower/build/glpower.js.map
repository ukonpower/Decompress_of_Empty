{"version":3,"file":"glpower.js","sources":["../src/GLPowerVAO.ts","../src/GLPowerProgram.ts","../src/GLPowerBuffer.ts","../src/Math/Vector.ts","../src/GLPowerTexture.ts","../src/GLPowerFrameBuffer.ts","../src/Power.ts","../src/GLPowerTransformFeedback.ts","../src/Math/Matrix.ts","../src/Math/Quaternion.ts","../src/Geometries/Geometry.ts","../src/Geometries/CubeGeometry.ts","../src/Geometries/CylinderGeometry.ts","../src/Geometries/PlaneGeometry.ts","../src/Geometries/SphereGeometry.ts","../src/Geometries/MipMapGeometry.ts","../src/ECS/index.ts","../src/utils/EventEmitter.ts","../src/ECS/System/index.ts","../src/Animation/Bezier.ts","../src/Animation/Easings.ts","../src/Animation/FCurve.ts","../src/Animation/FCurveGroup.ts","../src/Animation/FCurveKeyFrame.ts","../src/BLidge/index.ts"],"sourcesContent":["import { GLPowerBuffer } from \"./GLPowerBuffer\";\r\n\r\nexport type Attribute = {\r\n\tarray: number[];\r\n\tsize: number;\r\n}\r\n\r\ntype AttributeOptions = {\r\n\tinstanceDivisor?: number;\r\n}\r\n\r\nexport type AttributeBuffer = {\r\n\tbuffer: GLPowerBuffer;\r\n\tsize: number;\r\n\tcount: number;\r\n\tlocation?: number;\r\n} & AttributeOptions\r\n\r\nexport class GLPowerVAO {\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\r\n\tpublic vao: WebGLVertexArrayObject | null;\r\n\r\n\tpublic program: WebGLProgram;\r\n\r\n\tprotected indexBuffer: GLPowerBuffer | null;\r\n\r\n\tprotected attributes: Map<string, AttributeBuffer>;\r\n\r\n\tpublic vertCount: number;\r\n\tpublic indexCount: number;\r\n\r\n\tpublic instanceCount: number;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext, program: WebGLProgram ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.program = program;\r\n\r\n\t\tthis.vao = this.gl.createVertexArray();\r\n\t\tthis.attributes = new Map();\r\n\t\tthis.indexBuffer = null;\r\n\r\n\t\tthis.vertCount = 0;\r\n\t\tthis.indexCount = 0;\r\n\t\tthis.instanceCount = 0;\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tAttribute\r\n\t-------------------------------*/\r\n\r\n\tpublic setAttribute( name: string, buffer: GLPowerBuffer, size: number, opt?: AttributeOptions ) {\r\n\r\n\t\tconst attr = this.attributes.get( name );\r\n\r\n\t\tconst count = buffer.array ? buffer.array.length / size : 0;\r\n\r\n\t\tthis.attributes.set( name, {\r\n\t\t\t...attr,\r\n\t\t\t...{\r\n\t\t\t\tbuffer,\r\n\t\t\t\tsize,\r\n\t\t\t\tcount,\r\n\t\t\t\t...opt\r\n\t\t\t},\r\n\t\t\tlocation: undefined\r\n\t\t} );\r\n\r\n\t\tthis.updateAttributes();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic removeAttribute( name: string ) {\r\n\r\n\t\tthis.attributes.delete( name );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic updateAttributes( force?: boolean ) {\r\n\r\n\t\tif ( ! this.vao ) return;\r\n\r\n\t\tthis.vertCount = 0;\r\n\t\tthis.instanceCount = 0;\r\n\r\n\t\tthis.gl.bindVertexArray( this.vao );\r\n\r\n\t\tthis.attributes.forEach( ( attribute, name ) => {\r\n\r\n\t\t\tif ( ( attribute.location === undefined || force ) ) {\r\n\r\n\t\t\t\tattribute.location = this.gl.getAttribLocation( this.program, name );\r\n\r\n\t\t\t\tif ( attribute.location > - 1 ) {\r\n\r\n\t\t\t\t\tthis.gl.bindBuffer( this.gl.ARRAY_BUFFER, attribute.buffer.buffer );\r\n\t\t\t\t\tthis.gl.enableVertexAttribArray( attribute.location );\r\n\t\t\t\t\tthis.gl.vertexAttribPointer( attribute.location, attribute.size, this.gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\tif ( attribute.instanceDivisor !== undefined ) {\r\n\r\n\t\t\t\t\t\tthis.gl.vertexAttribDivisor( attribute.location, attribute.instanceDivisor );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.vertCount = Math.max( this.vertCount, attribute.count );\r\n\r\n\t\t\tif ( attribute.instanceDivisor !== undefined && attribute.instanceDivisor > 0 ) {\r\n\r\n\t\t\t\tif ( this.instanceCount == 0 ) {\r\n\r\n\t\t\t\t\tthis.instanceCount = attribute.count;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.instanceCount = Math.min( this.instanceCount, attribute.count );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tthis.gl.bindVertexArray( null );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tIndex\r\n\t-------------------------------*/\r\n\r\n\tpublic setIndex( indexBuffer: GLPowerBuffer | null ) {\r\n\r\n\t\tthis.indexBuffer = indexBuffer;\r\n\r\n\t\tif ( ! this.vao ) return;\r\n\r\n\t\tthis.gl.bindVertexArray( this.vao );\r\n\r\n\t\tthis.gl.bindBuffer( this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer ? this.indexBuffer.buffer : null );\r\n\r\n\t\tthis.gl.bindVertexArray( null );\r\n\r\n\t\tif ( this.indexBuffer && this.indexBuffer.array ) {\r\n\r\n\t\t\tthis.indexCount = this.indexBuffer.array.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tUSE\r\n\t-------------------------------*/\r\n\r\n\tpublic use( cb?: ( vao: GLPowerVAO ) => void ) {\r\n\r\n\t\tthis.gl.bindVertexArray( this.vao );\r\n\r\n\t\tif ( cb ) cb( this );\r\n\r\n\t\tthis.gl.bindVertexArray( null );\r\n\r\n\t}\r\n\r\n\tpublic getVAO() {\r\n\r\n\t\treturn this.vao;\r\n\r\n\t}\r\n\r\n}\r\n","import { Matrix } from \"./Math/Matrix\";\r\nimport { Vector } from \"./Math/Vector\";\r\nimport { GLPowerVAO } from \"./GLPowerVAO\";\r\nimport { GLPowerTexture } from \".\";\r\n\r\nexport type Uniformable = boolean | number | Vector | Matrix | GLPowerTexture;\r\n\r\nexport type UniformType =\r\n\t'1f' | '1fv' | '2f' | '2fv' | '3f' | '3fv' | '4f' | '4fv' |\r\n\t'1i' | '1iv' | '2i' | '2iv' | '3i' | '3iv' | '4i' | '4iv' |\r\n\t'Matrix2fv' | 'Matrix3fv' | 'Matrix4fv';\r\n\r\nexport type Uniform = {\r\n\tlocation: WebGLUniformLocation | null;\r\n\tvalue: ( number | boolean )[];\r\n\ttype: string;\r\n\tcache?: ( number | boolean )[];\r\n\tneedsUpdate?: boolean\r\n}\r\n\r\nexport type Uniforms = {[key:string]: {value: Uniformable | Uniformable[], type: UniformType}}\r\n\r\nexport type ShaderOptions = {\r\n\ttransformFeedbackVaryings?: string[]\r\n}\r\n\r\nexport class GLPowerProgram {\r\n\r\n\tpublic gl: WebGL2RenderingContext;\r\n\tpublic program: WebGLProgram | null;\r\n\r\n\tprivate vao: Map<string, GLPowerVAO>;\r\n\tprotected uniforms: Map<string, Uniform>;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.program = this.gl.createProgram();\r\n\r\n\t\tthis.vao = new Map();\r\n\t\tthis.uniforms = new Map();\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tShader\r\n\t-------------------------------*/\r\n\r\n\tpublic setShader( vertexShaderSrc: string, fragmentShaderSrc: string, opt?: ShaderOptions ) {\r\n\r\n\t\tif ( this.program === null ) {\r\n\r\n\t\t\tconsole.warn( 'program is null.' );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst vs = this.createShader( vertexShaderSrc, this.gl.VERTEX_SHADER );\r\n\t\tconst fs = this.createShader( fragmentShaderSrc, this.gl.FRAGMENT_SHADER );\r\n\r\n\t\tif ( ! vs || ! fs ) return;\r\n\r\n\t\tthis.gl.attachShader( this.program, vs );\r\n\t\tthis.gl.attachShader( this.program, fs );\r\n\r\n\t\tif ( opt && opt.transformFeedbackVaryings ) {\r\n\r\n\t\t\tthis.gl.transformFeedbackVaryings( this.program, opt.transformFeedbackVaryings, this.gl.SEPARATE_ATTRIBS );\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.linkProgram( this.program );\r\n\r\n\t\tif ( ! this.gl.getProgramParameter( this.program, this.gl.LINK_STATUS ) ) {\r\n\r\n\t\t\tconsole.error( 'program link error:', this.gl.getProgramInfoLog( this.program ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tprotected createShader( shaderSrc: string, type: number ) {\r\n\r\n\t\tconst shader = this.gl.createShader( type );\r\n\r\n\t\tif ( ! shader ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.shaderSource( shader, shaderSrc );\r\n\t\tthis.gl.compileShader( shader );\r\n\r\n\t\tif ( this.gl.getShaderParameter( shader, this.gl.COMPILE_STATUS ) ) {\r\n\r\n\t\t\treturn shader;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( this.gl.getShaderInfoLog( shader ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tUniforms\r\n\t-------------------------------*/\r\n\r\n\tpublic setUniform( name: string, type: UniformType, value: ( number | boolean )[] ) {\r\n\r\n\t\tconst uniform = this.uniforms.get( name );\r\n\r\n\t\tif ( uniform ) {\r\n\r\n\t\t\tuniform.type = type;\r\n\t\t\tuniform.value = value;\r\n\r\n\t\t\tif ( uniform.cache ) {\r\n\r\n\t\t\t\tfor ( let i = 0; i < value.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( uniform.cache[ i ] !== value[ i ] ) {\r\n\r\n\t\t\t\t\t\tuniform.needsUpdate = true;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tuniform.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.uniforms.set( name, {\r\n\t\t\t\tvalue,\r\n\t\t\t\ttype: type,\r\n\t\t\t\tlocation: null,\r\n\t\t\t\tneedsUpdate: true\r\n\t\t\t} );\r\n\r\n\t\t\tthis.updateUniformLocations();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate updateUniformLocations( force?: boolean ) {\r\n\r\n\t\tif ( ! this.program ) return;\r\n\r\n\t\tthis.uniforms.forEach( ( uniform, key ) => {\r\n\r\n\t\t\tif ( uniform.location === null || force ) {\r\n\r\n\t\t\t\tuniform.location = this.gl.getUniformLocation( this.program!, key );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tpublic uploadUniforms() {\r\n\r\n\t\tthis.uniforms.forEach( uniform => {\r\n\r\n\t\t\tif ( uniform.needsUpdate ) {\r\n\r\n\t\t\t\tif ( /Matrix[2|3|4]fv/.test( uniform.type ) ) {\r\n\r\n\t\t\t\t\t( this.gl as any )[ 'uniform' + uniform.type ]( uniform.location, false, uniform.value );\r\n\r\n\t\t\t\t} else if ( /[1|2|3|4][f|i]$/.test( uniform.type ) ) {\r\n\r\n\t\t\t\t\t( this.gl as any )[ 'uniform' + uniform.type ]( uniform.location, ...uniform.value );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t( this.gl as any )[ 'uniform' + uniform.type ]( uniform.location, uniform.value );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniform.cache = uniform.value.concat();\r\n\t\t\t\tuniform.needsUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tVAO\r\n\t-------------------------------*/\r\n\r\n\tpublic getVAO( id: string = '_' ) {\r\n\r\n\t\tif ( ! this.program ) return null;\r\n\r\n\t\tlet vao = this.vao.get( id );\r\n\r\n\t\tif ( vao ) return vao;\r\n\r\n\t\tvao = new GLPowerVAO( this.gl, this.program );\r\n\r\n\t\tthis.vao.set( id, vao );\r\n\r\n\t\treturn vao;\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tDraw??\r\n\t-------------------------------*/\r\n\r\n\tpublic use( cb?: ( program: GLPowerProgram ) => void ) {\r\n\r\n\t\tif ( ! this.program ) return;\r\n\r\n\t\tthis.gl.useProgram( this.program );\r\n\r\n\t\tif ( cb ) {\r\n\r\n\t\t\tcb( this );\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.useProgram( null );\r\n\r\n\t}\r\n\r\n\tpublic getProgram() {\r\n\r\n\t\treturn this.program;\r\n\r\n\t}\r\n\r\n}\r\n","export type BufferType = 'vbo' | 'ibo';\r\nexport type TArrayBuffer = Uint8Array | Uint16Array | Uint32Array | Float32Array | Float64Array\r\n\r\nexport class GLPowerBuffer {\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\tpublic buffer: WebGLBuffer | null;\r\n\tpublic array: TArrayBuffer | null;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.buffer = this.gl.createBuffer();\r\n\r\n\t\tthis.array = null;\r\n\r\n\t}\r\n\r\n\tpublic setData( data: TArrayBuffer, type: BufferType = 'vbo', usage?: number ) {\r\n\r\n\t\tconst target = type == 'vbo' ? this.gl.ARRAY_BUFFER : this.gl.ELEMENT_ARRAY_BUFFER;\r\n\r\n\t\tthis.gl.bindBuffer( target, this.buffer );\r\n\r\n\t\tthis.gl.bufferData( target, data, usage || this.gl.STATIC_DRAW );\r\n\r\n\t\tthis.gl.bindBuffer( target, null );\r\n\r\n\t\tthis.array = data;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n","import { Matrix, Types } from \"..\";\r\n\r\nexport type IVector2 = {\r\n\tx: number,\r\n\ty: number,\r\n}\r\n\r\nexport type IVector3 = IVector2 & {\r\n\tz: number,\r\n}\r\n\r\nexport type IVector4 = IVector3 & {\r\n\tw: number,\r\n}\r\n\r\nexport class Vector {\r\n\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\tpublic z: number;\r\n\tpublic w: number;\r\n\r\n\tconstructor( x?: number, y?: number, z?: number, w?: number ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = w || 0;\r\n\r\n\t}\r\n\r\n\tpublic get isVector() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tpublic set( x: number, y?: number, z?: number, w?: number ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y ?? this.y;\r\n\t\tthis.z = z ?? this.z;\r\n\t\tthis.w = w ?? this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic add( a: number ): Vector\r\n\r\n\tpublic add( a: Vector | Types.Nullable<IVector4> ): Vector\r\n\r\n\tpublic add( a: Vector | Types.Nullable<IVector4> | number ): Vector {\r\n\r\n\t\tif ( typeof a == 'number' ) {\r\n\r\n\t\t\tthis.x += a;\r\n\t\t\tthis.y += a;\r\n\t\t\tthis.z += a;\r\n\t\t\tthis.w += a;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x += a.x ?? 0;\r\n\t\t\tthis.y += a.y ?? 0;\r\n\t\t\tthis.z += a.z ?? 0;\r\n\t\t\tthis.w += a.w ?? 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic sub( a: number ): Vector\r\n\r\n\tpublic sub( a: Vector | Types.Nullable<IVector4> ): Vector\r\n\r\n\tpublic sub( a: Vector | Types.Nullable<IVector4> | number ) {\r\n\r\n\t\tif ( typeof ( a ) == 'number' ) {\r\n\r\n\t\t\tthis.x -= a;\r\n\t\t\tthis.y -= a;\r\n\t\t\tthis.z -= a;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x -= a.x ?? 0;\r\n\t\t\tthis.y -= a.y ?? 0;\r\n\t\t\tthis.z -= a.z ?? 0;\r\n\t\t\tthis.w -= a.w ?? 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic multiply( a: number ): Vector;\r\n\r\n\tpublic multiply( a: Vector ): Vector;\r\n\r\n\tpublic multiply( a: number | Vector ) {\r\n\r\n\t\tif ( typeof a == 'number' ) {\r\n\r\n\t\t\tthis.x *= a;\r\n\t\t\tthis.y *= a;\r\n\t\t\tthis.z *= a;\r\n\t\t\tthis.w *= a;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x *= a.x;\r\n\t\t\tthis.y *= a.y;\r\n\t\t\tthis.z *= a.z;\r\n\t\t\tthis.w *= a.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic divide( a: number ): Vector;\r\n\r\n\tpublic divide( a: Vector ): Vector;\r\n\r\n\tpublic divide( a: number | Vector ) {\r\n\r\n\t\tif ( typeof a == 'number' ) {\r\n\r\n\t\t\tthis.x /= a;\r\n\t\t\tthis.y /= a;\r\n\t\t\tthis.z /= a;\r\n\t\t\tthis.w /= a;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x /= a.x;\r\n\t\t\tthis.y /= a.y;\r\n\t\t\tthis.z /= a.z;\r\n\t\t\tthis.w /= a.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic length() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t}\r\n\r\n\tpublic normalize() {\r\n\r\n\t\treturn this.divide( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\tpublic cross( v: Vector | IVector3 ) {\r\n\r\n\t\tconst ax = this.x, ay = this.y, az = this.z;\r\n\t\tconst bx = v.x, by = v.y, bz = v.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic dot( v: Vector | IVector3 ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t}\r\n\r\n\tpublic applyMatrix3( mat: Matrix ) {\r\n\r\n\t\tconst elm = mat.elm;\r\n\r\n\t\tconst e11 = elm[ 0 ], e12 = elm[ 1 ], e13 = elm[ 2 ],\r\n\t\t\te21 = elm[ 4 ], e22 = elm[ 5 ], e23 = elm[ 6 ],\r\n\t\t\te31 = elm[ 8 ], e32 = elm[ 9 ], e33 = elm[ 10 ];\r\n\r\n\t\t// const xx = this.x * e11 + this.y * e12 + this.z * e13;\r\n\t\t// const yy = this.x * e21 + this.y * e22 + this.z * e23;\r\n\t\t// const zz = this.x * e31 + this.y * e32 + this.z * e33;\r\n\r\n\t\tconst xx = this.x * e11 + this.y * e21 + this.z * e31;\r\n\t\tconst yy = this.x * e12 + this.y * e22 + this.z * e32;\r\n\t\tconst zz = this.x * e13 + this.y * e23 + this.z * e33;\r\n\r\n\t\tthis.x = xx;\r\n\t\tthis.y = yy;\r\n\t\tthis.z = zz;\r\n\t\tthis.w = 0;\r\n\r\n\t}\r\n\r\n\tpublic applyMatrix4( mat: Matrix ) {\r\n\r\n\t\tconst elm = mat.elm;\r\n\r\n\t\tconst e11 = elm[ 0 ], e12 = elm[ 1 ], e13 = elm[ 2 ], e14 = elm[ 3 ],\r\n\t\t\te21 = elm[ 4 ], e22 = elm[ 5 ], e23 = elm[ 6 ], e24 = elm[ 7 ],\r\n\t\t\te31 = elm[ 8 ], e32 = elm[ 9 ], e33 = elm[ 10 ], e34 = elm[ 11 ],\r\n\t\t\te41 = elm[ 12 ], e42 = elm[ 13 ], e43 = elm[ 14 ], e44 = elm[ 15 ];\r\n\r\n\t\tconst xx = this.x * e11 + this.y * e21 + this.z * e31 + this.w * e41;\r\n\t\tconst yy = this.x * e12 + this.y * e22 + this.z * e32 + this.w * e42;\r\n\t\tconst zz = this.x * e13 + this.y * e23 + this.z * e33 + this.w * e43;\r\n\t\tconst ww = this.x * e14 + this.y * e24 + this.z * e34 + this.w * e44;\r\n\r\n\t\tthis.x = xx;\r\n\t\tthis.y = yy;\r\n\t\tthis.z = zz;\r\n\t\tthis.w = ww;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic copy( a: Vector | Types.Nullable<IVector4> ) {\r\n\r\n\t\tthis.x = a.x ?? 0;\r\n\t\tthis.y = a.y ?? 0;\r\n\t\tthis.z = a.z ?? 0;\r\n\t\tthis.w = a.w ?? 0;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic clone() {\r\n\r\n\t\treturn new Vector( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n\tpublic getElm( type?: 'vec2' | 'vec3' | 'vec4' ) {\r\n\r\n\t\tif ( type == 'vec2' ) {\r\n\r\n\t\t\treturn [ this.x, this.y ];\r\n\r\n\t\t} else if ( type == 'vec3' ) {\r\n\r\n\t\t\treturn [ this.x, this.y, this.z ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [ this.x, this.y, this.z, this.w ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import { Vector } from \"./Math/Vector\";\r\nimport { Types } from \"./types\";\r\n\r\ntype ImagePretense = {\r\n\twidth: number,\r\n\theight: number\r\n}\r\n\r\ntype GLPowerTextureSetting = {\r\n\ttype: number,\r\n\tinternalFormat: number,\r\n\tformat: number,\r\n\tmagFilter: number,\r\n\tminFilter: number,\r\n\tgenerateMipmap: boolean,\r\n\twrapS: number,\r\n\twrapT: number,\r\n}\r\n\r\nexport class GLPowerTexture {\r\n\r\n\tpublic unit: number;\r\n\tpublic image: HTMLImageElement | ImagePretense | null;\r\n\tpublic size: Vector;\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\tprivate texture: WebGLTexture | null;\r\n\r\n\tprivate _setting: GLPowerTextureSetting;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\t\tthis.image = null;\r\n\t\tthis.unit = 0;\r\n\t\tthis.size = new Vector();\r\n\t\tthis.texture = this.gl.createTexture();\r\n\r\n\t\tthis._setting = {\r\n\t\t\ttype: this.gl.UNSIGNED_BYTE,\r\n\t\t\tinternalFormat: this.gl.RGBA,\r\n\t\t\tformat: this.gl.RGBA,\r\n\t\t\tmagFilter: this.gl.NEAREST,\r\n\t\t\tminFilter: this.gl.NEAREST,\r\n\t\t\tgenerateMipmap: false,\r\n\t\t\twrapS: this.gl.CLAMP_TO_EDGE,\r\n\t\t\twrapT: this.gl.CLAMP_TO_EDGE,\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tpublic get isTexture() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tpublic setting( param: Types.Nullable<GLPowerTextureSetting> ) {\r\n\r\n\t\tthis._setting = {\r\n\t\t\t...this._setting,\r\n\t\t\t...param\r\n\t\t};\r\n\r\n\t\tthis.attach( this.image );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic attach( img: HTMLImageElement | ImagePretense | null ) {\r\n\r\n\t\tthis.image = img;\r\n\r\n\t\tthis.gl.bindTexture( this.gl.TEXTURE_2D, this.texture );\r\n\r\n\t\tif ( this.image ) {\r\n\r\n\t\t\tthis.size.set( this.image.width, this.image.height );\r\n\r\n\t\t\tif ( this.image instanceof HTMLImageElement ) {\r\n\r\n\t\t\t\tthis.gl.texImage2D( this.gl.TEXTURE_2D, 0, this._setting.internalFormat, this._setting.format, this._setting.type, this.image );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.gl.texImage2D( this.gl.TEXTURE_2D, 0, this._setting.internalFormat, this.image.width, this.image.height, 0, this._setting.format, this._setting.type, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.size.set( 1, 1 );\r\n\r\n\t\t\tthis.gl.texImage2D( this.gl.TEXTURE_2D, 0, this._setting.internalFormat, this.size.x, this.size.y, 0, this._setting.format, this._setting.type, null );\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.texParameteri( this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this._setting.magFilter );\r\n\t\tthis.gl.texParameteri( this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this._setting.minFilter );\r\n\t\tthis.gl.texParameterf( this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this._setting.wrapS );\r\n\t\tthis.gl.texParameterf( this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this._setting.wrapT );\r\n\r\n\t\tif ( this._setting.generateMipmap ) {\r\n\r\n\t\t\tthis.gl.generateMipmap( this.gl.TEXTURE_2D );\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.bindTexture( this.gl.TEXTURE_2D, null );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic activate( unitNumber: number ) {\r\n\r\n\t\tthis.gl.activeTexture( this.gl.TEXTURE0 + unitNumber );\r\n\t\tthis.gl.bindTexture( this.gl.TEXTURE_2D, this.texture );\r\n\r\n\t\tthis.unit = unitNumber;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic load( src: string, callBack?: () => void ) {\r\n\r\n\t\tconst img = new Image();\r\n\r\n\t\timg.onload = () => {\r\n\r\n\t\t\tthis.attach( img );\r\n\r\n\t\t\tif ( callBack ) callBack();\r\n\r\n\t\t};\r\n\r\n\t\timg.src = src;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic getTexture() {\r\n\r\n\t\treturn this.texture;\r\n\r\n\t}\r\n\r\n\tpublic loadAsync( src: string ) {\r\n\r\n\t\treturn new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\tconst img = new Image();\r\n\r\n\t\t\timg.onload = () => {\r\n\r\n\t\t\t\tthis.attach( img );\r\n\r\n\t\t\t\tresolve( this );\r\n\r\n\t\t\t};\r\n\r\n\t\t\timg.onerror = () => {\r\n\r\n\t\t\t\treject( 'img error, ' + src );\r\n\r\n\t\t\t};\r\n\r\n\t\t\timg.src = src;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n","import { GLPowerTexture } from \"./GLPowerTexture\";\r\nimport { Vector } from \"./Math/Vector\";\r\n\r\nexport class GLPowerFrameBuffer {\r\n\r\n\tpublic size: Vector;\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\tprivate frameBuffer: WebGLFramebuffer | null;\r\n\tprivate depthRenderBuffer: WebGLRenderbuffer | null;\r\n\r\n\tpublic textures: GLPowerTexture[];\r\n\tpublic textureAttachmentList: number[];\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.size = new Vector( 1, 1 );\r\n\r\n\t\tthis.frameBuffer = this.gl.createFramebuffer();\r\n\t\tthis.depthRenderBuffer = this.gl.createRenderbuffer();\r\n\r\n\t\tthis.textures = [];\r\n\t\tthis.textureAttachmentList = [];\r\n\r\n\t\t// depth buffer\r\n\r\n\t\tthis.gl.bindRenderbuffer( this.gl.RENDERBUFFER, this.depthRenderBuffer );\r\n\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, this.frameBuffer );\r\n\t\tthis.gl.framebufferRenderbuffer( this.gl.FRAMEBUFFER, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthRenderBuffer );\r\n\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, null );\r\n\t\tthis.gl.bindRenderbuffer( this.gl.RENDERBUFFER, null );\r\n\r\n\t}\r\n\r\n\tpublic setTexture( textures: GLPowerTexture[] ) {\r\n\r\n\t\tthis.textures = textures;\r\n\t\tthis.textureAttachmentList.length = 0;\r\n\r\n\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, this.frameBuffer );\r\n\r\n\t\tthis.textures.forEach( ( t, i ) => {\r\n\r\n\t\t\tt.attach( { width: this.size.x, height: this.size.y } );\r\n\r\n\t\t\tthis.gl.bindTexture( this.gl.TEXTURE_2D, t.getTexture() );\r\n\t\t\tthis.gl.texParameteri( this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR );\r\n\t\t\tthis.gl.texParameteri( this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR );\r\n\t\t\tthis.gl.bindTexture( this.gl.TEXTURE_2D, null );\r\n\r\n\t\t\tconst attachment = this.gl.COLOR_ATTACHMENT0 + i;\r\n\t\t\tthis.gl.framebufferTexture2D( this.gl.FRAMEBUFFER, attachment, this.gl.TEXTURE_2D, t.getTexture(), 0 );\r\n\r\n\t\t\tthis.textureAttachmentList.push( attachment );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, null );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic setSize( size: Vector ): void\r\n\r\n\tpublic setSize( width: number, height: number ) : void\r\n\r\n\tpublic setSize( width_size: number | Vector, height?: number ) {\r\n\r\n\t\tif ( typeof width_size == 'number' ) {\r\n\r\n\t\t\tthis.size.x = width_size;\r\n\r\n\t\t\tif ( height !== undefined ) {\r\n\r\n\t\t\t\tthis.size.y = height;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.size.copy( width_size );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setTexture( this.textures );\r\n\r\n\t\tthis.textures.forEach( t => {\r\n\r\n\t\t\tt.attach( { width: this.size.x, height: this.size.y } );\r\n\r\n\t\t} );\r\n\r\n\t\tif ( this.depthRenderBuffer ) {\r\n\r\n\t\t\tthis.gl.bindRenderbuffer( this.gl.RENDERBUFFER, this.depthRenderBuffer );\r\n\t\t\tthis.gl.renderbufferStorage( this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT32F, this.size.x, this.size.y );\r\n\t\t\tthis.gl.bindRenderbuffer( this.gl.RENDERBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic getFrameBuffer() {\r\n\r\n\t\treturn this.frameBuffer;\r\n\r\n\t}\r\n\r\n}\r\n","import { GLPowerProgram } from \"./GLPowerProgram\";\r\nimport { GLPowerBuffer } from \"./GLPowerBuffer\";\r\nimport { GLPowerTexture } from \"./GLPowerTexture\";\r\nimport { GLPowerFrameBuffer } from \"./GLPowerFrameBuffer\";\r\n\r\nexport class Power {\r\n\r\n\tpublic gl: WebGL2RenderingContext;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.gl.pixelStorei( gl.UNPACK_FLIP_Y_WEBGL, true );\r\n\r\n\t\tthis.gl.getExtension( \"EXT_color_buffer_float\" );\r\n\t\tthis.gl.getExtension( \"EXT_color_buffer_half_float\" );\r\n\r\n\t}\r\n\r\n\tpublic createProgram() {\r\n\r\n\t\tconst program = new GLPowerProgram( this.gl );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tpublic createBuffer() {\r\n\r\n\t\tconst vertexBuffer = new GLPowerBuffer( this.gl );\r\n\r\n\t\treturn vertexBuffer;\r\n\r\n\t}\r\n\r\n\tpublic createTexture() {\r\n\r\n\t\tconst texture = new GLPowerTexture( this.gl );\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tpublic createFrameBuffer() {\r\n\r\n\t\tconst frameBuffer = new GLPowerFrameBuffer( this.gl );\r\n\r\n\t\treturn frameBuffer;\r\n\r\n\t}\r\n\r\n}\r\n\r\n","import { GLPowerBuffer } from \"./GLPowerBuffer\";\r\n\r\nexport class GLPowerTransformFeedback {\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\tprivate transformFeedback: WebGLTransformFeedback | null;\r\n\r\n\tprotected feedbackBuffer: Map<string, {buffer: GLPowerBuffer, varyingIndex: number}>;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\t\tthis.transformFeedback = this.gl.createTransformFeedback();\r\n\r\n\t\tthis.feedbackBuffer = new Map();\r\n\r\n\t}\r\n\r\n\tpublic bind( cb?: () => void ) {\r\n\r\n\t\tthis.gl.bindTransformFeedback( this.gl.TRANSFORM_FEEDBACK, this.transformFeedback );\r\n\r\n\t\tif ( cb ) cb();\r\n\r\n\t\tthis.gl.bindTransformFeedback( this.gl.TRANSFORM_FEEDBACK, null );\r\n\r\n\t}\r\n\r\n\tpublic setBuffer( name: string, buffer: GLPowerBuffer, varyingIndex: number ) {\r\n\r\n\t\tthis.feedbackBuffer.set( name, {\r\n\t\t\tbuffer,\r\n\t\t\tvaryingIndex\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tpublic use( cb?: ( tf: GLPowerTransformFeedback ) => void ) {\r\n\r\n\t\tthis.bind( () => {\r\n\r\n\t\t\tthis.feedbackBuffer.forEach( fbBuffer => {\r\n\r\n\t\t\t\tthis.gl.bindBufferBase( this.gl.TRANSFORM_FEEDBACK_BUFFER, fbBuffer.varyingIndex, fbBuffer.buffer.buffer );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tif ( cb ) cb( this );\r\n\r\n\t\t\tthis.feedbackBuffer.forEach( fbBuffer => {\r\n\r\n\t\t\t\tthis.gl.bindBufferBase( this.gl.TRANSFORM_FEEDBACK_BUFFER, fbBuffer.varyingIndex, null );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n","import { IVector4 } from \"..\";\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { IVector3, Vector } from \"./Vector\";\r\n\r\nexport class Matrix {\r\n\r\n\tpublic elm: number[];\r\n\r\n\tconstructor( elm?: number [] ) {\r\n\r\n\t\tthis.elm = [\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1,\r\n\t\t];\r\n\r\n\t\tif ( elm ) {\r\n\r\n\t\t\tthis.set( elm );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic identity() {\r\n\r\n\t\tthis.elm = [\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1,\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic clone() {\r\n\r\n\t\treturn new Matrix().copy( this );\r\n\r\n\t}\r\n\r\n\tpublic copy( mat: Matrix ) {\r\n\r\n\t\tthis.set( mat.elm );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic perspective( fov: number, aspect: number, near: number, far: number ) {\r\n\r\n\t\tvar r = 1 / Math.tan( fov * Math.PI / 360 );\r\n\t\tvar d = far - near;\r\n\r\n\t\tthis.elm = [\r\n\t\t\tr / aspect, 0, 0, 0,\r\n\t\t\t0, r, 0, 0,\r\n\t\t\t0, 0, - ( far + near ) / d, - 1,\r\n\t\t\t0, 0, - ( far * near * 2 ) / d, 0\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic orthographic( width: number, height: number, near: number, far: number ) {\r\n\r\n\t\tthis.elm = [\r\n\t\t\t2 / width, 0, 0, 0,\r\n\t\t\t0, 2 / height, 0, 0,\r\n\t\t\t0, 0, - 2 / ( far - near ), 0,\r\n\t\t\t0, 0, - ( far + near ) / ( far - near ), 1,\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic lookAt( eye: Vector, target: Vector, up: Vector ) {\r\n\r\n\t\tconst zAxis = eye.clone().sub( target ).normalize();\r\n\t\tconst xAxis = up.clone().cross( zAxis ).normalize();\r\n\t\tconst yAxis = zAxis.clone().cross( xAxis ).normalize();\r\n\r\n\t\tthis.elm = [\r\n\t\t   xAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t   xAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t   xAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t   - eye.dot( xAxis ),\r\n\t\t   - eye.dot( yAxis ),\r\n\t\t   - eye.dot( zAxis ),\r\n\t\t   1,\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic inverse() {\r\n\r\n\t\tconst a = this.elm[ 0 ], b = this.elm[ 1 ], c = this.elm[ 2 ], d = this.elm[ 3 ],\r\n\t\t\te = this.elm[ 4 ], f = this.elm[ 5 ], g = this.elm[ 6 ], h = this.elm[ 7 ],\r\n\t\t\ti = this.elm[ 8 ], j = this.elm[ 9 ], k = this.elm[ 10 ], l = this.elm[ 11 ],\r\n\t\t\tm = this.elm[ 12 ], n = this.elm[ 13 ], o = this.elm[ 14 ], p = this.elm[ 15 ],\r\n\t\t\tq = a * f - b * e, r = a * g - c * e,\r\n\t\t\ts = a * h - d * e, t = b * g - c * f,\r\n\t\t\tu = b * h - d * f, v = c * h - d * g,\r\n\t\t\tw = i * n - j * m, x = i * o - k * m,\r\n\t\t\ty = i * p - l * m, z = j * o - k * n,\r\n\t\t\tA = j * p - l * n, B = k * p - l * o,\r\n\t\t\tdet = ( q * B - r * A + s * z + t * y - u * x + v * w ),\r\n\t\t\tivd = 1 / det;\r\n\r\n\t\tif ( det == 0 ) return this.identity();\r\n\r\n\t\tthis.elm[ 0 ] = ( f * B - g * A + h * z ) * ivd;\r\n\t\tthis.elm[ 1 ] = ( - b * B + c * A - d * z ) * ivd;\r\n\t\tthis.elm[ 2 ] = ( n * v - o * u + p * t ) * ivd;\r\n\t\tthis.elm[ 3 ] = ( - j * v + k * u - l * t ) * ivd;\r\n\t\tthis.elm[ 4 ] = ( - e * B + g * y - h * x ) * ivd;\r\n\t\tthis.elm[ 5 ] = ( a * B - c * y + d * x ) * ivd;\r\n\t\tthis.elm[ 6 ] = ( - m * v + o * s - p * r ) * ivd;\r\n\t\tthis.elm[ 7 ] = ( i * v - k * s + l * r ) * ivd;\r\n\t\tthis.elm[ 8 ] = ( e * A - f * y + h * w ) * ivd;\r\n\t\tthis.elm[ 9 ] = ( - a * A + b * y - d * w ) * ivd;\r\n\t\tthis.elm[ 10 ] = ( m * u - n * s + p * q ) * ivd;\r\n\t\tthis.elm[ 11 ] = ( - i * u + j * s - l * q ) * ivd;\r\n\t\tthis.elm[ 12 ] = ( - e * z + f * x - g * w ) * ivd;\r\n\t\tthis.elm[ 13 ] = ( a * z - b * x + c * w ) * ivd;\r\n\t\tthis.elm[ 14 ] = ( - m * t + n * r - o * q ) * ivd;\r\n\t\tthis.elm[ 15 ] = ( i * t - j * r + k * q ) * ivd;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic transpose() {\r\n\r\n\t\tconst e11 = this.elm[ 0 ], e12 = this.elm[ 1 ], e13 = this.elm[ 2 ], e14 = this.elm[ 3 ],\r\n\t\t\te21 = this.elm[ 4 ], e22 = this.elm[ 5 ], e23 = this.elm[ 6 ], e24 = this.elm[ 7 ],\r\n\t\t\te31 = this.elm[ 8 ], e32 = this.elm[ 9 ], e33 = this.elm[ 10 ], e34 = this.elm[ 11 ],\r\n\t\t\te41 = this.elm[ 12 ], e42 = this.elm[ 13 ], e43 = this.elm[ 14 ], e44 = this.elm[ 15 ];\r\n\r\n\t\tthis.elm[ 0 ] = e11; this.elm[ 1 ] = e21; this.elm[ 2 ] = e31; this.elm[ 3 ] = e41;\r\n\t\tthis.elm[ 4 ] = e12; this.elm[ 5 ] = e22; this.elm[ 6 ] = e32; this.elm[ 7 ] = e42;\r\n\t\tthis.elm[ 8 ] = e13; this.elm[ 9 ] = e23; this.elm[ 10 ] = e33; this.elm[ 11 ] = e43;\r\n\t\tthis.elm[ 12 ] = e14; this.elm[ 13 ] = e24; this.elm[ 14 ] = e34; this.elm[ 15 ] = e44;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic set( elm: number[] ) {\r\n\r\n\t\tfor ( let i = 0; i < this.elm.length; i ++ ) {\r\n\r\n\t\t\tthis.elm[ i ] = elm[ i ] ?? 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic setFromTransform( pos: IVector3, qua: Quaternion | IVector4, scale: IVector3 ) {\r\n\r\n\t\tthis.identity();\r\n\r\n\t\tthis.applyPosition( pos );\r\n\r\n\t\tthis.applyQuaternion( qua );\r\n\r\n\t\tthis.applyScale( scale );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic applyPosition( position: IVector3 ) {\r\n\r\n\t\tthis.matmul( [\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\tposition.x, position.y, position.z, 1\r\n\t\t] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic applyQuaternion( q: Quaternion | IVector4 ) {\r\n\r\n\t\tconst x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tconst xx = x * x, yy = y * y, zz = z * z, ww = w * w;\r\n\t\tconst xy = x * y, xz = x * z, xw = x * w, yz = y * z, yw = y * w, zw = z * w;\r\n\r\n\t\tthis.matmul( [\r\n\t\t\txx - yy - zz + ww,\r\n\t\t\t2 * ( xy + zw ),\r\n\t\t\t2 * ( xz - yw ),\r\n\t\t\t0,\r\n\r\n\t\t\t2 * ( xy - zw ),\r\n\t\t\t- xx + yy - zz + ww,\r\n\t\t\t2 * ( yz + xw ),\r\n\t\t\t0,\r\n\r\n\t\t\t2 * ( xz + yw ),\r\n\t\t\t2 * ( yz - xw ),\r\n\t\t\t- xx - yy + zz + ww,\r\n\r\n\t\t\t0, 0, 0, 0, 1\r\n\t\t] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic applyScale( scale: IVector3 ) {\r\n\r\n\t\tthis.matmul( [\r\n\t\t\tscale.x, 0, 0, 0,\r\n\t\t\t0, scale.y, 0, 0,\r\n\t\t\t0, 0, scale.z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tprotected matmul( elm2: number[] ) {\r\n\r\n\t\tconst dist = new Array( 16 );\r\n\r\n\t\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\tlet sum = 0;\r\n\r\n\t\t\t\tfor ( let k = 0; k < 4; k ++ ) {\r\n\r\n\t\t\t\t\tsum += this.elm[ k * 4 + j ] * elm2[ k + i * 4 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdist[ j + i * 4 ] = sum;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.elm = dist;\r\n\r\n\t}\r\n\r\n\tpublic multiply( m: Matrix ) {\r\n\r\n\t\tthis.matmul( m.elm );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic preMultiply( m: Matrix ) {\r\n\r\n\t\tconst tmp = this.copyToArray( [] );\r\n\r\n\t\tthis.set( m.elm );\r\n\r\n\t\tthis.matmul( tmp );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic copyToArray( array: number[] ) {\r\n\r\n\t\tarray.length = this.elm.length;\r\n\r\n\t\tfor ( let i = 0; i < this.elm.length; i ++ ) {\r\n\r\n\t\t\tarray[ i ] = this.elm[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n}\r\n","import { IVector3 } from \"..\";\r\nimport { Vector } from \"./Vector\";\r\n\r\nexport type Quat = {\r\n\tx: number,\r\n\ty: number,\r\n\tz: number\r\n}\r\n\r\nexport type EulerOrder = 'XYZ' | 'XZY' | 'ZYX' | 'YZX'\r\n\r\nexport class Quaternion {\r\n\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\tpublic z: number;\r\n\tpublic w: number;\r\n\r\n\tconstructor( x?: number, y?: number, z?: number, w?: number ) {\r\n\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.z = 0;\r\n\t\tthis.w = 1;\r\n\r\n\t\tthis.set( x, y, z, w );\r\n\r\n\t}\r\n\r\n\tpublic set( x?: number, y?: number, z?: number, w?: number ) {\r\n\r\n\t\tthis.x = x ?? this.x;\r\n\t\tthis.y = y ?? this.y;\r\n\t\tthis.z = z ?? this.z;\r\n\t\tthis.w = w ?? this.w;\r\n\r\n\t}\r\n\r\n\tpublic euler( euler: Vector | IVector3, order: EulerOrder = 'XYZ' ) {\r\n\r\n\t\tconst sx = Math.sin( euler.x / 2 );\r\n\t\tconst sy = Math.sin( euler.y / 2 );\r\n\t\tconst sz = Math.sin( euler.z / 2 );\r\n\r\n\t\tconst cx = Math.cos( euler.x / 2 );\r\n\t\tconst cy = Math.cos( euler.y / 2 );\r\n\t\tconst cz = Math.cos( euler.z / 2 );\r\n\r\n\t\tif ( order == 'XYZ' ) {\r\n\r\n\t\t\tthis.x = cx * sy * sz + sx * cy * cz;\r\n\t\t\tthis.y = - sx * cy * sz + cx * sy * cz;\r\n\t\t\tthis.z = cx * cy * sz + sx * sy * cz;\r\n\t\t\tthis.w = - sx * sy * sz + cx * cy * cz;\r\n\r\n\t\t} else if ( order == 'XZY' ) {\r\n\r\n\t\t\tthis.x = - cx * sy * sz + sx * cy * cz;\r\n\t\t\tthis.y = cx * sy * cz - sx * cy * sz;\r\n\t\t\tthis.z = sx * sy * cz + cx * cy * sz;\r\n\t\t\tthis.w = sx * sy * sz + cx * cy * cz;\r\n\r\n\t\t} else if ( order == 'YZX' ) {\r\n\r\n\t\t\tthis.x = sx * cy * cz + cx * sy * sz;\r\n\t\t\tthis.y = sx * cy * sz + cx * sy * cz;\r\n\t\t\tthis.z = - sx * sy * cz + cx * cy * sz;\r\n\t\t\tthis.w = - sx * sy * sz + cx * cy * cz;\r\n\r\n\t\t} else if ( order == 'ZYX' ) {\r\n\r\n\t\t\tthis.x = sx * cy * cz - cx * sy * sz;\r\n\t\t\tthis.y = sx * cy * sz + cx * sy * cz;\r\n\t\t\tthis.z = - sx * sy * cz + cx * cy * sz;\r\n\t\t\tthis.w = sx * sy * sz + cx * cy * cz;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic multiply() {\r\n\t}\r\n\r\n}\r\n","import { BufferType } from \"../GLPowerBuffer\";\r\nimport { Power } from \"../Power\";\r\nimport { Attribute, AttributeBuffer } from \"../GLPowerVAO\";\r\n\r\ntype DefaultAttributeName = 'position' | 'uv' | 'normal' | 'index';\r\n\r\nexport class Geometry {\r\n\r\n\tpublic count: number = 0;\r\n\r\n\tpublic attributes: {[key: string]: Attribute} = {};\r\n\r\n\tconstructor() {\r\n\t}\r\n\r\n\tpublic setAttribute( name: DefaultAttributeName | ( string & {} ), array: number[], size: number ) {\r\n\r\n\t\tthis.attributes[ name ] = {\r\n\t\t\tarray,\r\n\t\t\tsize\r\n\t\t};\r\n\r\n\t\tthis.updateVertCount();\r\n\r\n\t}\r\n\r\n\tpublic getAttribute( name: DefaultAttributeName | ( string & {} ) ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t}\r\n\r\n\tprivate updateVertCount() {\r\n\r\n\t\tconst keys = Object.keys( this.attributes );\r\n\r\n\t\tthis.count = keys.length > 0 ? Infinity : 0;\r\n\r\n\t\tkeys.forEach( name => {\r\n\r\n\t\t\tconst attribute = this.attributes[ name ];\r\n\r\n\t\t\tif ( name != 'index' ) {\r\n\r\n\t\t\t\tthis.count = Math.min( attribute.array.length / attribute.size, this.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t// ecs\r\n\r\n\tpublic getAttributeBuffer( core: Power, name: DefaultAttributeName | ( string & {} ), constructor: Float32ArrayConstructor | Uint16ArrayConstructor, bufferType: BufferType = 'vbo' ): AttributeBuffer {\r\n\r\n\t\tconst attr = this.getAttribute( name );\r\n\r\n\t\treturn {\r\n\t\t\tbuffer: core.createBuffer().setData( new constructor( attr.array ), bufferType ),\r\n\t\t\tsize: attr.size,\r\n\t\t\tcount: attr.array.length / attr.size\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tpublic getComponent( power: Power ) {\r\n\r\n\t\tconst attributes = [];\r\n\r\n\t\tif ( this.getAttribute( 'position' ) ) {\r\n\r\n\t\t\tattributes.push( { name: 'position', ...this.getAttributeBuffer( power, 'position', Float32Array ) } );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.getAttribute( 'uv' ) ) {\r\n\r\n\t\t\tattributes.push( { name: 'uv', ...this.getAttributeBuffer( power, 'uv', Float32Array ) } );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.getAttribute( 'normal' ) ) {\r\n\r\n\t\t\tattributes.push( { name: 'normal', ...this.getAttributeBuffer( power, 'normal', Float32Array ) } );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tattributes,\r\n\t\t\tindex: this.getAttributeBuffer( power, 'index', Uint16Array, 'ibo' )\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n","import { Geometry } from './Geometry';\r\n\r\nexport class CubeGeometry extends Geometry {\r\n\r\n\tconstructor( width: number = 1, height: number = 1, depth: number = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst hx = width / 2;\r\n\t\tconst hy = height / 2;\r\n\t\tconst hz = depth / 2;\r\n\r\n\t\tconst posArray = [\r\n\t\t\t- hx, hy, hz,\r\n\t\t\thx, hy, hz,\r\n\t\t\t- hx, - hy, hz,\r\n\t\t\thx, - hy, hz,\r\n\r\n\t\t\thx, hy, - hz,\r\n\t\t\t- hx, hy, - hz,\r\n\t\t\thx, - hy, - hz,\r\n\t\t\t- hx, - hy, - hz,\r\n\r\n\t\t\thx, hy, hz,\r\n\t\t\thx, hy, - hz,\r\n\t\t\thx, - hy, hz,\r\n\t\t\thx, - hy, - hz,\r\n\r\n\t\t\t- hx, hy, - hz,\r\n\t\t\t- hx, hy, hz,\r\n\t\t\t- hx, - hy, - hz,\r\n\t\t\t- hx, - hy, hz,\r\n\r\n\t\t\t- hx, hy, - hz,\r\n\t\t\thx, hy, - hz,\r\n\t\t\t- hx, hy, hz,\r\n\t\t\thx, hy, hz,\r\n\r\n\t\t\t- hx, - hy, hz,\r\n\t\t\thx, - hy, hz,\r\n\t\t\t- hx, - hy, - hz,\r\n\t\t\thx, - hy, - hz,\r\n\r\n\t\t];\r\n\r\n\t\tconst normalArray = [\r\n\t\t\t0, 0, 1,\r\n\t\t\t0, 0, 1,\r\n\t\t\t0, 0, 1,\r\n\t\t\t0, 0, 1,\r\n\t\t\t0, 0, - 1,\r\n\t\t\t0, 0, - 1,\r\n\t\t\t0, 0, - 1,\r\n\t\t\t0, 0, - 1,\r\n\t\t\t1, 0, 0,\r\n\t\t\t1, 0, 0,\r\n\t\t\t1, 0, 0,\r\n\t\t\t1, 0, 0,\r\n\t\t\t- 1, 0, 0,\r\n\t\t\t- 1, 0, 0,\r\n\t\t\t- 1, 0, 0,\r\n\t\t\t- 1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, - 1, 0,\r\n\t\t\t0, - 1, 0,\r\n\t\t\t0, - 1, 0,\r\n\t\t\t0, - 1, 0,\r\n\t\t];\r\n\r\n\t\tconst uvArray = [];\r\n\t\tconst indexArray = [];\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tuvArray.push(\r\n\t\t\t\t0, 1,\r\n\t\t\t\t1, 1,\r\n\t\t\t\t0, 0,\r\n\t\t\t\t1, 0\r\n\t\t\t);\r\n\r\n\t\t\tconst offset = 4 * i;\r\n\r\n\t\t\tindexArray.push(\r\n\t\t\t\t0 + offset, 2 + offset, 1 + offset, 1 + offset, 2 + offset, 3 + offset\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tthis.setAttribute( 'position', posArray, 3 );\r\n\t\tthis.setAttribute( 'normal', normalArray, 3 );\r\n\t\tthis.setAttribute( 'uv', uvArray, 2 );\r\n\t\tthis.setAttribute( 'index', indexArray, 1 );\r\n\r\n\t}\r\n\r\n}\r\n","import { Geometry } from './Geometry';\r\nimport { Vector } from '../Math/Vector';\r\n\r\nexport class CylinderGeometry extends Geometry {\r\n\r\n\tconstructor( radiusTop: number = 0.5, radiusBottom: number = 0.5, height: number = 1, radSegments: number = 10, heightSegments: number = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst posArray = [];\r\n\t\tconst normalArray = [];\r\n\t\tconst uvArray = [];\r\n\t\tconst indexArray = [];\r\n\r\n\t\t//上下面分2回多くループ\r\n\t\tfor ( let i = 0; i <= heightSegments + 2; i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j < radSegments; j ++ ) {\r\n\r\n\t\t\t\tconst theta = Math.PI * 2.0 / radSegments * j;\r\n\r\n\t\t\t\tif ( i <= heightSegments ) {\r\n\r\n\t\t\t\t\t//side\r\n\t\t\t\t\tconst w = i / heightSegments;\r\n\t\t\t\t\tconst radius = ( 1.0 - w ) * radiusBottom + w * radiusTop;\r\n\r\n\t\t\t\t\tconst x = Math.cos( theta ) * radius;\r\n\t\t\t\t\tconst y = - ( height / 2 ) + ( height / heightSegments ) * i;\r\n\t\t\t\t\tconst z = Math.sin( theta ) * radius;\r\n\r\n\t\t\t\t\tposArray.push( x, y, z );\r\n\r\n\t\t\t\t\tuvArray.push(\r\n\t\t\t\t\t\tj / radSegments,\r\n\t\t\t\t\t\ti / heightSegments\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconst normal = new Vector( Math.cos( theta ), 0, Math.sin( theta ) ).normalize();\r\n\r\n\t\t\t\t\tnormalArray.push(\r\n\t\t\t\t\t\tnormal.x,\r\n\t\t\t\t\t\tnormal.y,\r\n\t\t\t\t\t\tnormal.z\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif ( i < heightSegments ) {\r\n\r\n\t\t\t\t\t\tindexArray.push(\r\n\t\t\t\t\t\t\ti * radSegments + j,\r\n\t\t\t\t\t\t\t( i + 1 ) * radSegments + ( j + 1 ) % radSegments,\r\n\t\t\t\t\t\t\ti * radSegments + ( j + 1 ) % radSegments,\r\n\r\n\t\t\t\t\t\t\ti * radSegments + j,\r\n\t\t\t\t\t\t\t( i + 1 ) * radSegments + j,\r\n\t\t\t\t\t\t\t( i + 1 ) * radSegments + ( j + 1 ) % radSegments,\r\n\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t//bottom, top\r\n\r\n\t\t\t\t\tconst side = i - heightSegments - 1;\r\n\r\n\t\t\t\t\tconst radius = side ? radiusTop : radiusBottom;\r\n\r\n\t\t\t\t\tconst x = Math.cos( theta ) * radius;\r\n\t\t\t\t\tconst y = - ( height / 2 ) + height * ( side );\r\n\t\t\t\t\tconst z = Math.sin( theta ) * radius;\r\n\r\n\t\t\t\t\tposArray.push( x, y, z );\r\n\r\n\t\t\t\t\tuvArray.push(\r\n\t\t\t\t\t\t( x + radius ) * 0.5 / radius,\r\n\t\t\t\t\t\t( z + radius ) * 0.5 / radius,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tnormalArray.push( 0, - 1 + side * 2, 0 );\r\n\r\n\t\t\t\t\tconst offset = radSegments * ( heightSegments + ( side + 1 ) );\r\n\r\n\t\t\t\t\tif ( j <= radSegments - 2 ) {\r\n\r\n\t\t\t\t\t\tif ( side == 0 ) {\r\n\r\n\t\t\t\t\t\t\tindexArray.push(\r\n\t\t\t\t\t\t\t\toffset, offset + j, offset + j + 1,\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tindexArray.push(\r\n\t\t\t\t\t\t\t\toffset, offset + j + 1, offset + j\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// let offset = radSegments * heightSegments;\r\n\t\t// for( let i = 2; i < radSegments; i++ ){\r\n\r\n\t\t// \tindexArray.push(\r\n\t\t// \t\t0, i, i - 1,\r\n\t\t// \t\t0 + offset, i + offset, i - 1 + offset,\r\n\t\t// \t);\r\n\r\n\t\t// }\r\n\r\n\t\tthis.setAttribute( 'position', posArray, 3 );\r\n\t\tthis.setAttribute( 'normal', normalArray, 3 );\r\n\t\tthis.setAttribute( 'uv', uvArray, 2 );\r\n\t\tthis.setAttribute( 'index', indexArray, 1 );\r\n\r\n\t}\r\n\r\n}\r\n","import { Geometry } from './Geometry';\r\n\r\nexport class PlaneGeometry extends Geometry {\r\n\r\n\tconstructor( width: number = 1, height: number = 1, widthSegments: number = 1, heightSegments: number = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst hx = width / 2;\r\n\t\tconst hy = height / 2;\r\n\r\n\t\tconst posArray = [];\r\n\t\tconst normalArray = [];\r\n\t\tconst uvArray = [];\r\n\t\tconst indexArray = [];\r\n\r\n\t\tfor ( let i = 0; i <= heightSegments; i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j <= widthSegments; j ++ ) {\r\n\r\n\t\t\t\tconst x = ( j / widthSegments );\r\n\t\t\t\tconst y = ( i / widthSegments );\r\n\r\n\t\t\t\tposArray.push(\r\n\t\t\t\t\t- hx + width * x,\r\n\t\t\t\t\t- hy + height * y,\r\n\t\t\t\t\t0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tuvArray.push( x, y );\r\n\r\n\t\t\t\tnormalArray.push( 0, 0, 1 );\r\n\r\n\t\t\t\tif ( i > 0 && j > 0 ) {\r\n\r\n\t\t\t\t\tconst n = ( widthSegments + 1 );\r\n\t\t\t\t\tconst ru = n * i + j;\r\n\t\t\t\t\tconst lb = n * ( i - 1 ) + j - 1;\r\n\r\n\t\t\t\t\tindexArray.push(\r\n\t\t\t\t\t\tru, n * i + j - 1, lb,\r\n\t\t\t\t\t\tru, lb, n * ( i - 1 ) + j,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setAttribute( 'position', posArray, 3 );\r\n\t\tthis.setAttribute( 'normal', normalArray, 3 );\r\n\t\tthis.setAttribute( 'uv', uvArray, 2 );\r\n\t\tthis.setAttribute( 'index', indexArray, 1 );\r\n\r\n\t}\r\n\r\n}\r\n","import { Geometry } from './Geometry';\r\nimport { Vector } from '../Math/Vector';\r\n\r\nexport class SphereGeometry extends Geometry {\r\n\r\n\tconstructor( radius: number = 0.5, widthSegments: number = 20, heightSegments: number = 10 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst posArray = [];\r\n\t\tconst normalArray = [];\r\n\t\tconst uvArray = [];\r\n\t\tconst indexArray = [];\r\n\r\n\t\tfor ( let i = 0; i <= heightSegments; i ++ ) {\r\n\r\n\t\t\tconst thetaI = i / heightSegments * Math.PI;\r\n\r\n\t\t\tconst segments = ( i != 0 && i != heightSegments ) ? widthSegments : widthSegments;\r\n\r\n\t\t\tfor ( let j = 0; j < segments; j ++ ) {\r\n\r\n\t\t\t\t// pos\r\n\r\n\t\t\t\tconst thetaJ = j / segments * Math.PI * 2.0;\r\n\t\t\t\tconst widthRadius = Math.sin( thetaI ) * radius;\r\n\r\n\t\t\t\tconst x = Math.cos( thetaJ ) * widthRadius;\r\n\t\t\t\tconst y = - Math.cos( thetaI ) * radius;\r\n\t\t\t\tconst z = - Math.sin( thetaJ ) * widthRadius;\r\n\r\n\t\t\t\tposArray.push( x, y, z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvArray.push(\r\n\t\t\t\t\tj / segments,\r\n\t\t\t\t\ti / heightSegments\r\n\t\t\t\t);\r\n\r\n\t\t\t\t//normal\r\n\r\n\t\t\t\tconst normal = new Vector( x, y, z ).normalize();\r\n\r\n\t\t\t\tnormalArray.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// index\r\n\r\n\t\t\t\tindexArray.push(\r\n\t\t\t\t\ti * widthSegments + j,\r\n\t\t\t\t\ti * widthSegments + ( j + 1 ) % widthSegments,\r\n\t\t\t\t\t( i + 1 ) * widthSegments + ( j + 1 ) % widthSegments,\r\n\r\n\t\t\t\t\ti * widthSegments + j,\r\n\t\t\t\t\t( i + 1 ) * widthSegments + ( j + 1 ) % widthSegments,\r\n\t\t\t\t\t( i + 1 ) * widthSegments + j,\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setAttribute( 'position', posArray, 3 );\r\n\t\tthis.setAttribute( 'normal', normalArray, 3 );\r\n\t\tthis.setAttribute( 'uv', uvArray, 2 );\r\n\t\tthis.setAttribute( 'index', indexArray, 1 );\r\n\r\n\t}\r\n\r\n\tpublic setAttribute( name: ( 'position' | 'uv' | 'normal' | 'index' ) | ( string & {} ), array: number[], size: number ): void {\r\n\r\n\t\tif ( name == 'index' ) {\r\n\r\n\t\t\tarray.forEach( ( item, index ) => {\r\n\r\n\t\t\t\t// クソ\r\n\t\t\t\tarray[ index ] = item % this.count;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tsuper.setAttribute( name, array, size );\r\n\r\n\r\n\r\n\t}\r\n\r\n}\r\n","import { Vector } from '..';\r\nimport { Geometry } from './Geometry';\r\n\r\nexport class MipMapGeometry extends Geometry {\r\n\r\n\tconstructor( count: number = 7 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.count = count;\r\n\r\n\t\tconst posArray = [];\r\n\t\tconst uvArray = [];\r\n\t\tconst indexArray = [];\r\n\r\n\t\tconst p = new Vector( 0, 0 );\r\n\t\tlet s = 1.0;\r\n\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tposArray.push( - 1.0 + p.x,\t\t1.0 + p.y,\t\t0 );\r\n\t\t\tposArray.push( - 1.0 + p.x + s, 1.0 + p.y,\t\t0 );\r\n\t\t\tposArray.push( - 1.0 + p.x + s, 1.0 + p.y - s,\t0 );\r\n\t\t\tposArray.push( - 1.0 + p.x,\t\t1.0 + p.y - s, \t0 );\r\n\r\n\t\t\tuvArray.push( 0.0, 1.0 );\r\n\t\t\tuvArray.push( 1.0, 1.0 );\r\n\t\t\tuvArray.push( 1.0, 0.0 );\r\n\t\t\tuvArray.push( 0.0, 0.0 );\r\n\r\n\t\t\tconst indexOffset = ( i + 0.0 ) * 4;\r\n\t\t\tindexArray.push( indexOffset + 0, indexOffset + 2, indexOffset + 1, indexOffset + 0, indexOffset + 3, indexOffset + 2 );\r\n\r\n\t\t\tp.x += s;\r\n\t\t\tp.y = p.y - s;\r\n\r\n\t\t\ts *= 0.5;\r\n\r\n\t\t}\r\n\r\n\t\tthis.setAttribute( 'position', posArray, 3 );\r\n\t\tthis.setAttribute( 'uv', uvArray, 2 );\r\n\t\tthis.setAttribute( 'index', indexArray, 1 );\r\n\r\n\t}\r\n\r\n\r\n}\r\n","import { Component, ComponentName } from \"./Component\";\r\nimport { Entity } from \"./Entity\";\r\nimport { EntityQuery, System } from \"./System\";\r\nimport { World } from \"./World\";\r\n\r\nexport interface ECSUpdateEvent {\r\n\tworld: World,\r\n\ttime: number,\r\n\tdeltaTime: number,\r\n}\r\n\r\nexport namespace ECS {\r\n\r\n\texport const createWorld = (): World => {\r\n\r\n\t\treturn {\r\n\t\t\telapsedTime: 0,\r\n\t\t\tlastUpdateTime: new Date().getTime(),\r\n\t\t\tentitiesTotalCount: 0,\r\n\t\t\tentities: [],\r\n\t\t\tcomponents: new Map(),\r\n\t\t\tsystems: new Map()\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t// entity\r\n\r\n\texport const createEntity = ( world: World ): Entity => {\r\n\r\n\t\tconst entity: Entity = world.entitiesTotalCount ++;\r\n\r\n\t\tworld.entities.push( entity );\r\n\r\n\t\treturn entity;\r\n\r\n\t};\r\n\r\n\texport const removeEntity = ( world: World, entity: Entity ): void =>{\r\n\r\n\t\tconst index = world.entities.findIndex( e => e == entity );\r\n\r\n\t\t// remove entity\r\n\r\n\t\tif ( index > - 1 ) {\r\n\r\n\t\t\tworld.entities.slice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t\t// remove components\r\n\r\n\t\tworld.components.forEach( component => {\r\n\r\n\t\t\tcomponent[ entity ] = undefined;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t// component\r\n\r\n\texport const addComponent = <T extends Component >( world: World, entity: Entity, componentName: ComponentName, component: T ): T => {\r\n\r\n\t\tlet componentArray = world.components.get( componentName );\r\n\r\n\t\tif ( componentArray === undefined ) {\r\n\r\n\t\t\tcomponentArray = [];\r\n\r\n\t\t\tworld.components.set( componentName, componentArray );\r\n\r\n\t\t}\r\n\r\n\t\tif ( componentArray.length < entity + 1 ) {\r\n\r\n\t\t\tcomponentArray.length = entity + 1;\r\n\r\n\t\t}\r\n\r\n\t\tcomponentArray[ entity ] = component;\r\n\r\n\t\treturn component;\r\n\r\n\t};\r\n\r\n\texport const removeComponent = ( world: World, entity: Entity, componentName: ComponentName ) => {\r\n\r\n\t\tconst componentArray = world.components.get( componentName );\r\n\r\n\t\tif ( componentArray && componentArray.length > entity ) {\r\n\r\n\t\t\tcomponentArray[ entity ] = undefined;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\texport const getComponent = <T extends Component >( world: World, entity: Entity, componentName: ComponentName ): T | null => {\r\n\r\n\t\tconst component = world.components.get( componentName );\r\n\r\n\t\tif ( component !== undefined ) {\r\n\r\n\t\t\treturn ( component[ entity ] ) as T;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t};\r\n\r\n\t// system\r\n\r\n\texport const addSystem = <T extends System >( world: World, systemName: string, system: T ) => {\r\n\r\n\t\tworld.systems.set( systemName, system );\r\n\r\n\t};\r\n\r\n\texport const removeSystem = ( world: World, componentName: ComponentName ) => {\r\n\r\n\t\tworld.systems.delete( componentName );\r\n\r\n\t};\r\n\r\n\t// update\r\n\r\n\texport const update = ( world: World ) => {\r\n\r\n\t\tconst now = new Date().getTime();\r\n\t\tconst deltaTime = ( now - world.lastUpdateTime ) / 1000;\r\n\t\tworld.elapsedTime += deltaTime;\r\n\t\tworld.lastUpdateTime = now;\r\n\r\n\t\tconst systemList = world.systems;\r\n\r\n\t\tsystemList.forEach( system => {\r\n\r\n\t\t\tsystem.update( {\r\n\t\t\t\tworld,\r\n\t\t\t\tdeltaTime,\r\n\t\t\t\ttime: world.elapsedTime,\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t// entities\r\n\r\n\texport const getEntities = ( world: World, query: EntityQuery ): Entity[] => {\r\n\r\n\t\tconst entities = world.entities.filter( entt => {\r\n\r\n\t\t\tfor ( let i = 0; i < query.length; i ++ ) {\r\n\r\n\t\t\t\tconst componentName = query[ i ];\r\n\r\n\t\t\t\tconst component = world.components.get( componentName );\r\n\r\n\t\t\t\tif ( component === undefined || component[ entt ] === undefined ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t} );\r\n\r\n\t\treturn entities;\r\n\r\n\t};\r\n\r\n}\r\n","\r\ntype ListenerFunction = Function;\r\n\r\ntype Listener = {\r\n\tevent: string,\r\n\tcb: ListenerFunction;\r\n\tonce?: boolean\r\n}\r\n\r\nexport class EventEmitter {\r\n\r\n\tprivate listeners: Listener[];\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.listeners = [];\r\n\r\n\t}\r\n\r\n\tpublic on( event: string, cb: ListenerFunction ) {\r\n\r\n\t\tthis.listeners.push( {\r\n\t\t\tevent,\r\n\t\t\tcb\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tpublic once( event: string, cb: ListenerFunction ) {\r\n\r\n\t\tthis.listeners.push( {\r\n\t\t\tevent,\r\n\t\t\tcb,\r\n\t\t\tonce: true\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tpublic off( event: string, cb: ListenerFunction ) {\r\n\r\n\t\tthis.listeners = this.listeners.filter( l => {\r\n\r\n\t\t\treturn ! ( l.event == event && l.cb == cb );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tpublic emit( event: string, args?: any[] ) {\r\n\r\n\t\tconst tmpListener = this.listeners.concat();\r\n\r\n\t\tfor ( let i = 0; i < tmpListener.length; i ++ ) {\r\n\r\n\t\t\tconst listener = tmpListener[ i ];\r\n\r\n\t\t\tif ( listener.event == event ) {\r\n\r\n\t\t\t\tlistener.cb.apply( this, args || [] );\r\n\r\n\t\t\t\tif ( listener.once ) {\r\n\r\n\t\t\t\t\tthis.off( event, listener.cb );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import { ECS, ECSUpdateEvent } from \"..\";\r\nimport { EventEmitter } from \"../../utils/EventEmitter\";\r\nimport { ComponentName } from \"../Component\";\r\nimport { Entity } from \"../Entity\";\r\n\r\nexport type EntityQuery = ComponentName[]\r\n\r\nexport interface SystemUpdateEvent extends ECSUpdateEvent {\r\n}\r\n\r\nexport class System extends EventEmitter {\r\n\r\n\tprotected queries: {name: string, query: EntityQuery}[];\r\n\r\n\tconstructor( queries?: {[key: string]:EntityQuery} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.queries = [];\r\n\r\n\t\tif ( queries ) {\r\n\r\n\t\t\tconst keys = Object.keys( queries );\r\n\r\n\t\t\tfor ( let i = 0; i < keys.length; i ++ ) {\r\n\r\n\t\t\t\tconst name = keys[ i ];\r\n\r\n\t\t\t\tthis.queries.push( { name, query: queries[ name ] } );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tpublic update( event: SystemUpdateEvent ): void {\r\n\r\n\t\tfor ( let i = 0; i < this.queries.length; i ++ ) {\r\n\r\n\t\t\tconst q = this.queries[ i ];\r\n\r\n\t\t\tconst entities = ECS.getEntities( event.world, q.query );\r\n\r\n\t\t\tthis.beforeUpdateImpl( q.name, event, entities );\r\n\r\n\t\t\tfor ( let j = 0; j < entities.length; j ++ ) {\r\n\r\n\t\t\t\tthis.updateImpl( q.name, entities[ j ], event );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.afterUpdateImpl( q.name, event );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected beforeUpdateImpl( logicName: string, event: SystemUpdateEvent, entities: Entity[] ) { // eslint-disable-line\r\n\t}\r\n\r\n\tprotected updateImpl( logicName: string, entity: Entity, event: SystemUpdateEvent ) { // eslint-disable-line\r\n\t}\r\n\r\n\tprotected afterUpdateImpl( logicName: string, event: SystemUpdateEvent ) { // eslint-disable-line\r\n\t}\r\n\r\n\tpublic dispose() {\r\n\r\n\t\tthis.emit( 'dispose' );\r\n\r\n\t}\r\n\r\n}\r\n","\n/*-------------------------------\n\t\tBezier\n-------------------------------*/\n\nexport namespace Bezier {\n\n\texport type BezierControlPoints = {\n\t\tp0: number;\n\t\tp1: number;\n\t\tp2: number;\n\t\tp3: number;\n\t}\n\n\t// inspired https://github.com/gre/bezier-easing/blob/master/src/index.js and https://github.com/0b5vr/automaton/blob/872420e798d9054d4a7a06c972cbb4261a67b4bc/src/bezierEasing.ts\n\n\texport const NEWTON_ITERATIONS = 4;\n\texport const NEWTON_MIN_SLOPE = 0.001;\n\texport const SUBDIVISION_PRECISION = 0.0000001;\n\texport const SUBDIVISION_MAX_ITERATIONS = 10;\n\texport const BEZIER_EASING_CACHE_SIZE = 11;\n\texport const BEZIER_EASING_SAMPLE_STEP_SIZE = 1.0 / BEZIER_EASING_CACHE_SIZE;\n\n\tfunction calcBezierA( p: BezierControlPoints ) {\n\n\t\treturn - p.p0 + 3.0 * p.p1 - 3.0 * p.p2 + p.p3;\n\n\t}\n\tfunction calcBezierB( p: BezierControlPoints ) {\n\n\t\treturn 3.0 * p.p0 - 6.0 * p.p1 + 3.0 * p.p2;\n\n\t}\n\tfunction calcBezierC( p: BezierControlPoints ) {\n\n\t\treturn - 3.0 * p.p0 + 3.0 * p.p1;\n\n\t}\n\n\texport function calcBezierSlope( p: BezierControlPoints, t: number ) {\n\n\t\treturn 3.0 * calcBezierA( p ) * t * t + 2.0 * calcBezierB( p ) * t + calcBezierC( p );\n\n\t}\n\n\texport function calcBezier( p: BezierControlPoints, t: number ) {\n\n\t\treturn ( ( calcBezierA( p ) * t + calcBezierB( p ) ) * t + calcBezierC( p ) ) * t + p.p0;\n\n\t}\n\n\tfunction subdiv( x: number, startT: number, endT: number, p: BezierControlPoints ) {\n\n\t\tlet currentX = 0;\n\t\tlet currentT = 0;\n\n\t\tfor ( let i = 0; i < SUBDIVISION_MAX_ITERATIONS; i ++ ) {\n\n\t\t\tcurrentT = startT + ( endT - startT ) / 2;\n\t\t\tcurrentX = calcBezier( p, currentT );\n\n\t\t\tif ( currentX > x ) {\n\n\t\t\t\tendT = currentT;\n\n\t\t\t} else {\n\n\t\t\t\tstartT = currentT;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn currentT;\n\n\t}\n\n\tfunction newton( x:number, p: BezierControlPoints, t: number ) {\n\n\t\tfor ( let i = 0; i < NEWTON_ITERATIONS; i ++ ) {\n\n\t\t\tconst slope = calcBezierSlope( p, t );\n\n\t\t\tif ( slope == 0.0 ) {\n\n\t\t\t\treturn t;\n\n\t\t\t}\n\n\t\t\tconst currentX = ( calcBezier( p, t ) ) - x;\n\t\t\tt -= currentX / slope;\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\texport function getBezierTfromX( p: BezierControlPoints, x: number, cache: number[] ) {\n\n\t\tp.p1 = Math.max( p.p0, Math.min( p.p3, p.p1 ) );\n\t\tp.p2 = Math.max( p.p0, Math.min( p.p3, p.p2 ) );\n\n\t\tlet sample = 0;\n\n\t\tfor ( let i = 1; i < cache.length; i ++ ) {\n\n\t\t\tsample = i - 1;\n\t\t\tif ( x < cache[ i ] ) break;\n\n\t\t}\n\n\t\tconst t = sample / ( BEZIER_EASING_CACHE_SIZE - 1.0 );\n\t\tconst diff = calcBezierSlope( p, t ) / ( p.p3 - p.p0 );\n\n\t\tif ( diff == 0.0 ) {\n\n\t\t\treturn t;\n\n\t\t} else if ( diff > 0.01 ) {\n\n\t\t\treturn newton( x, p, t );\n\n\t\t} else {\n\n\t\t\treturn subdiv( x, t, t + BEZIER_EASING_SAMPLE_STEP_SIZE, p );\n\n\t\t}\n\n\n\t}\n\n}\n","import { IVector2 } from \"..\";\nimport { Bezier } from \"./Bezier\";\n\nexport type EasingFunc = ( t: number ) => any\n\nexport namespace Easings {\n\n\texport function sigmoid( weight: number = 6 ): EasingFunc {\n\n\t\treturn ( x: number ) => {\n\n\t\t\tvar e1 = Math.exp( - weight * ( 2 * x - 1 ) );\n\t\t\tvar e2 = Math.exp( - weight );\n\n\t\t\treturn ( 1 + ( 1 - e1 ) / ( 1 + e1 ) * ( 1 + e2 ) / ( 1 - e2 ) ) / 2;\n\n\t\t};\n\n\t}\n\n\texport function smoothstep( min: number, max: number, value: number ): number {\n\n\t\tconst x = Math.max( 0, Math.min( 1, ( value - min ) / ( max - min ) ) );\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t}\n\n\t/*\n\t@auther https://gist.github.com/gre/1650294\n\t*/\n\n\texport function linear( t: number ) {\n\n\t\treturn t;\n\n\t}\n\n\texport function easeInQuad( t: number ) {\n\n\t\treturn t * t;\n\n\t}\n\n\texport function easeOutQuad( t: number ) {\n\n\t\treturn t * ( 2 - t );\n\n\t}\n\n\texport function easeInOutQuad( t: number ) {\n\n\t\treturn t < .5 ? 2 * t * t : - 1 + ( 4 - 2 * t ) * t;\n\n\t}\n\n\texport function easeInCubic( t: number ) {\n\n\t\treturn t * t * t;\n\n\t}\n\n\texport function easeOutCubic( t: number ) {\n\n\t\treturn ( -- t ) * t * t + 1;\n\n\t}\n\n\texport function easeInOutCubic( t: number ) {\n\n\t\treturn t < .5 ? 4 * t * t * t : ( t - 1 ) * ( 2 * t - 2 ) * ( 2 * t - 2 ) + 1;\n\n\t}\n\n\texport function easeInQuart( t: number ) {\n\n\t\treturn t * t * t * t;\n\n\t}\n\n\texport function easeOutQuart( t: number ) {\n\n\t\treturn 1 - ( -- t ) * t * t * t;\n\n\t}\n\n\texport function easeInOutQuart( t: number ) {\n\n\t\treturn t < .5 ? 8 * t * t * t * t : 1 - 8 * ( -- t ) * t * t * t;\n\n\t}\n\n\texport function easeInQuint( t: number ) {\n\n\t\treturn t * t * t * t * t;\n\n\t}\n\n\texport function easeOutQuint( t: number ) {\n\n\t\treturn 1 + ( -- t ) * t * t * t * t;\n\n\t}\n\n  \texport function easeInOutQuint( t: number ) {\n\n  \t\treturn t < .5 ? 16 * t * t * t * t * t : 1 + 16 * ( -- t ) * t * t * t * t;\n\n  \t}\n\n\texport function bezier( c1: IVector2, h1: IVector2, h2: IVector2, c2: IVector2 ): EasingFunc {\n\n\t\tvar cache = new Array( Bezier.BEZIER_EASING_CACHE_SIZE );\n\n\t\tfor ( var i = 0; i < Bezier.BEZIER_EASING_CACHE_SIZE; ++ i ) {\n\n\t\t\tcache[ i ] = Bezier.calcBezier( { p0: c1.x, p1: h1.x, p2: h2.x, p3: c2.x }, i / ( Bezier.BEZIER_EASING_CACHE_SIZE - 1.0 ) );\n\n\t\t}\n\n\t\treturn ( x: number ) => {\n\n\t\t\tif ( x <= c1.x ) return c1.y;\n\t\t\tif ( c2.x <= x ) return c2.y;\n\n\t\t\treturn Bezier.calcBezier( { p0: c1.y, p1: h1.y, p2: h2.y, p3: c2.y }, Bezier.getBezierTfromX( { p0: c1.x, p1: h1.x, p2: h2.x, p3: c2.x }, x, cache ) );\n\n\t\t};\n\n\t}\n\n\texport function cubicBezier( h1X: number, h1Y: number, h2X: number, h2Y: number ) {\n\n\t\treturn bezier(\n\t\t\t{ x: 0.0, y: 0.0 },\n\t\t\t{ x: h1X, y: h1Y },\n\t\t\t{ x: h2X, y: h2Y },\n\t\t\t{ x: 1.0, y: 1.0 },\n\t\t);\n\n\t}\n\n}\n","import { FCurveKeyFrame } from './FCurveKeyFrame';\r\nimport { EventEmitter } from '../utils/EventEmitter';\r\n\r\nexport class FCurve extends EventEmitter {\r\n\r\n\tpublic keyframes: FCurveKeyFrame[] = [];\r\n\r\n\tprivate cache: { frame: number, value: number } = { frame: NaN, value: NaN };\r\n\r\n\tpublic frameStart: number;\r\n\tpublic frameEnd: number;\r\n\tpublic frameDuration: number;\r\n\r\n\tconstructor( frames?: FCurveKeyFrame[] ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.frameStart = 0;\r\n\t\tthis.frameEnd = 0;\r\n\t\tthis.frameDuration = 0;\r\n\r\n\t\tthis.set( frames );\r\n\r\n\t}\r\n\r\n\tpublic set( frames?: FCurveKeyFrame[] ) {\r\n\r\n\t\tif ( frames ) {\r\n\r\n\t\t\tthis.keyframes.length = 0;\r\n\r\n\t\t\tframes.forEach( keyframe => {\r\n\r\n\t\t\t\tthis.addKeyFrame( keyframe );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic addKeyFrame( keyframe: FCurveKeyFrame ) {\r\n\r\n\t\tlet index = 0;\r\n\r\n\t\tfor ( let i = 0; i < this.keyframes.length; i ++ ) {\r\n\r\n\t\t\tconst frame = this.keyframes[ i ];\r\n\r\n\t\t\tif ( frame.coordinate.x < keyframe.coordinate.x ) {\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.keyframes.splice( index, 0, keyframe );\r\n\r\n\t\t// set frame info\r\n\r\n\t\tthis.frameStart = this.keyframes[ 0 ].coordinate.x;\r\n\t\tthis.frameEnd = this.keyframes[ this.keyframes.length - 1 ].coordinate.x;\r\n\r\n\t}\r\n\r\n\tpublic getValue( frame: number ) {\r\n\r\n\t\tif ( frame == this.cache.frame ) {\r\n\r\n\t\t\treturn this.cache.value;\r\n\r\n\t\t}\r\n\r\n\t\tlet value: number | null = null;\r\n\r\n\t\tfor ( let i = 0; i < this.keyframes.length; i ++ ) {\r\n\r\n\t\t\tconst keyframe = this.keyframes[ i ];\r\n\r\n\t\t\tif ( frame <= keyframe.coordinate.x ) {\r\n\r\n\t\t\t\tconst beforeKeyFrame = this.keyframes[ i - 1 ];\r\n\r\n\t\t\t\tif ( beforeKeyFrame ) {\r\n\r\n\t\t\t\t\tvalue = beforeKeyFrame.to( keyframe, frame );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvalue = keyframe.coordinate.y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( value === null && this.keyframes.length > 0 ) {\r\n\r\n\t\t\tvalue = this.keyframes[ this.keyframes.length - 1 ].coordinate.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( value !== null ) {\r\n\r\n\t\t\tthis.cache = {\r\n\t\t\t\tframe: frame,\r\n\t\t\t\tvalue: value\r\n\t\t\t};\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n}\r\n","import { Types, Vector } from '..';\r\nimport { FCurve } from './FCurve';\r\nimport { EventEmitter } from '../utils/EventEmitter';\r\n\r\nexport class FCurveGroup extends EventEmitter {\r\n\r\n\tpublic name: string;\r\n\r\n\tprivate curves: Map<Types.RecommendString<Types.Axis>, FCurve>;\r\n\r\n\tpublic frameStart: number;\r\n\tpublic frameEnd: number;\r\n\tpublic frameDuration: number;\r\n\tprivate updatedFrame: number = - 1;\r\n\r\n\tpublic value: Vector;\r\n\r\n\tconstructor( name?: string, x?: FCurve, y?: FCurve, z?: FCurve, w?: FCurve ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.name = name || '';\r\n\r\n\t\tthis.frameStart = 0;\r\n\t\tthis.frameEnd = 0;\r\n\t\tthis.frameDuration = 0;\r\n\r\n\t\tthis.curves = new Map();\r\n\r\n\t\tthis.value = new Vector();\r\n\r\n\t\tif ( x ) this.setFCurve( x, 'x' );\r\n\t\tif ( y ) this.setFCurve( y, 'y' );\r\n\t\tif ( z ) this.setFCurve( z, 'z' );\r\n\t\tif ( w ) this.setFCurve( w, 'w' );\r\n\r\n\t}\r\n\r\n\tpublic setFCurve( curve: FCurve, axis: Types.RecommendString<Types.Axis> ) {\r\n\r\n\t\tthis.curves.set( axis, curve );\r\n\r\n\t\tlet minStart = Infinity;\r\n\t\tlet maxEnd = - Infinity;\r\n\r\n\t\tthis.curves.forEach( curve => {\r\n\r\n\t\t\tif ( curve.frameStart < minStart ) {\r\n\r\n\t\t\t\tminStart = curve.frameStart;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( curve.frameEnd > maxEnd ) {\r\n\r\n\t\t\t\tmaxEnd = curve.frameEnd;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tif ( minStart == - Infinity || maxEnd == Infinity ) {\r\n\r\n\t\t\tminStart = 0;\r\n\t\t\tmaxEnd = 1;\r\n\r\n\t\t}\r\n\r\n\t\tthis.frameStart = minStart;\r\n\t\tthis.frameEnd = maxEnd;\r\n\t\tthis.frameDuration = this.frameEnd - this.frameStart;\r\n\r\n\t}\r\n\r\n\tpublic getFCurve( axis: Types.RecommendString<Types.Axis> ) {\r\n\r\n\t\treturn this.curves.get( axis ) || null;\r\n\r\n\t}\r\n\r\n\tpublic setFrame( frame: number ) {\r\n\r\n\t\tif ( frame == this.updatedFrame ) return this;\r\n\r\n\t\tconst x = this.curves.get( 'x' );\r\n\t\tconst y = this.curves.get( 'y' );\r\n\t\tconst z = this.curves.get( 'z' );\r\n\t\tconst w = this.curves.get( 'w' );\r\n\r\n\t\tif ( x ) this.value.x = x.getValue( frame );\r\n\t\tif ( y ) this.value.y = y.getValue( frame );\r\n\t\tif ( z ) this.value.z = z.getValue( frame );\r\n\t\tif ( w ) this.value.w = w.getValue( frame );\r\n\r\n\t\tthis.updatedFrame = frame;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n","import { IVector2 } from '../Math/Vector';\r\nimport { EasingFunc, Easings } from './Easings';\r\nimport { EventEmitter } from '../utils/EventEmitter';\r\n\r\nexport type FCurveInterpolation = \"BEZIER\" | \"LINEAR\" | \"CONSTANT\";\r\n\r\nexport class FCurveKeyFrame extends EventEmitter {\r\n\r\n\tpublic coordinate: IVector2 = { x: 0, y: 0 };\r\n\tpublic handleLeft: IVector2 = { x: 0, y: 0 };\r\n\tpublic handleRight: IVector2 = { x: 0, y: 0 };\r\n\tpublic interpolation: FCurveInterpolation = 'BEZIER';\r\n\r\n\tprivate easing: EasingFunc | null = null;\r\n\tprivate nextFrame: FCurveKeyFrame | null = null;\r\n\r\n\tconstructor( coordinate: IVector2, handleLeft?: IVector2, handleRight?: IVector2, interpolation?: FCurveInterpolation ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.set( coordinate, handleLeft, handleRight, interpolation );\r\n\r\n\t}\r\n\r\n\tpublic set( coordinate: IVector2, handleLeft?: IVector2, handleRight?: IVector2, interpolation?: FCurveInterpolation ) {\r\n\r\n\t\tthis.coordinate = coordinate;\r\n\t\tthis.handleLeft = handleLeft || coordinate;\r\n\t\tthis.handleRight = handleRight || coordinate;\r\n\t\tthis.interpolation = interpolation || 'BEZIER';\r\n\r\n\t}\r\n\r\n\tprivate getEasing( interpolation: FCurveInterpolation, nextFrame: FCurveKeyFrame ) {\r\n\r\n\t\tif ( interpolation == 'BEZIER' ) {\r\n\r\n\t\t\treturn Easings.bezier( this.coordinate, this.handleRight, nextFrame.handleLeft, nextFrame.coordinate );\r\n\r\n\t\t} else if ( interpolation == 'CONSTANT' ) {\r\n\r\n\t\t\treturn () => {\r\n\r\n\t\t\t\treturn this.coordinate.y;\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn ( t: number ) => {\r\n\r\n\t\t\t\tconst d = ( nextFrame.coordinate.y - this.coordinate.y );\r\n\t\t\t\tt = ( t - this.coordinate.x ) / ( nextFrame.coordinate.x - this.coordinate.x );\r\n\r\n\t\t\t\treturn this.coordinate.y + t * d;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic to( nextFrame: FCurveKeyFrame, t: number ) {\r\n\r\n\t\tif ( this.nextFrame == null || this.nextFrame.coordinate.x != nextFrame.coordinate.x || this.nextFrame.coordinate.y != nextFrame.coordinate.y ) {\r\n\r\n\t\t\tthis.easing = this.getEasing( this.interpolation, nextFrame );\r\n\t\t\tthis.nextFrame = nextFrame;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.easing ) {\r\n\r\n\t\t\treturn this.easing( t );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import { EventEmitter } from '../utils/EventEmitter';\r\nimport { IVector2, IVector3 } from \"../Math/Vector\";\r\nimport { FCurve } from \"../Animation/FCurve\";\r\nimport { FCurveGroup } from '../Animation/FCurveGroup';\r\nimport { FCurveInterpolation, FCurveKeyFrame } from \"../Animation/FCurveKeyFrame\";\r\n\r\n// object\r\n\r\nexport type BLidgeObject = {\r\n\tname: string,\r\n\tparent: string,\r\n\tchildren: BLidgeObject[],\r\n\tanimation: BLidgeAnimation,\r\n\tposition: IVector3,\r\n\trotation: IVector3,\r\n\tscale: IVector3,\r\n\tmaterial: BLidgeMaterialParam\r\n\ttype: BLidgeObjectType,\r\n\tparam?: BLidgeCameraParam | BLidgeMeshParam | BLidgeLightParamCommon\r\n}\r\n\r\nexport type BLidgeObjectType = 'empty' | 'cube' | 'sphere' | 'mesh' | 'camera' | 'plane' | 'light';\r\n\r\nexport type BLidgeCameraParam = {\r\n\tfov: number\r\n}\r\n\r\nexport type BLidgeMeshParam = {\r\n\tposition: number[],\r\n\tuv: number[],\r\n\tnormal: number[],\r\n\tindex: number[],\r\n}\r\n\r\nexport type BLidgeLightParam = BLidgeDirectionalLightParam | BLidgeSpotLightParam;\r\n\r\ntype BLidgeLightParamCommon = {\r\n\ttype: 'directional' | 'spot'\r\n\tcolor: IVector3,\r\n\tintensity: number,\r\n\tuseShadowMap: boolean,\r\n}\r\n\r\nexport type BLidgeDirectionalLightParam = {\r\n\ttype: 'directional'\r\n} & BLidgeLightParamCommon\r\n\r\nexport type BLidgeSpotLightParam = {\r\n\ttype: 'spot',\r\n\tangle: number,\r\n\tblend: number,\r\n} & BLidgeLightParamCommon\r\n\r\n// material\r\n\r\nexport type BLidgeMaterialParam = {\r\n\tname: string,\r\n\tuniforms: BLidgeAnimation\r\n}\r\n\r\n// scene\r\n\r\nexport type BLidgeSceneData = {\r\n    animations: {[key: string]: BLidgeAnimationCurveParam[]};\r\n\tscene: BLidgeObject;\r\n\tframe: BLidgeSceneFrame;\r\n}\r\n\r\n// animation\r\n\r\nexport type BLidgeAnimation = { [key: string]: string }\r\n\r\nexport type BLidgeAnimationCurveAxis = 'x' | 'y' | 'z' | 'w'\r\n\r\nexport type BLidgeAnimationCurveParam = {\r\n    keyframes: BLidgeAnimationCurveKeyFrameParam[];\r\n\taxis: BLidgeAnimationCurveAxis\r\n}\r\n\r\nexport type BLidgeAnimationCurveKeyFrameParam = {\r\n    c: IVector2;\r\n    h_l: IVector2;\r\n    h_r: IVector2;\r\n    e: string;\r\n    i: \"B\" | \"L\" | \"C\";\r\n}\r\n\r\n// message\r\n\r\nexport type BLidgeMessage = BLidgeSyncSceneMessage | BLidgeSyncFrameMessage\r\n\r\nexport type BLidgeSyncSceneMessage = {\r\n\ttype: \"sync/scene\",\r\n    data: BLidgeSceneData;\r\n}\r\n\r\nexport type BLidgeSyncFrameMessage = {\r\n\ttype: \"sync/timeline\";\r\n\tdata: BLidgeSceneFrame;\r\n}\r\n\r\nexport type BLidgeSceneFrame = {\r\n\tstart: number;\r\n\tend: number;\r\n\tcurrent: number;\r\n\tfps: number;\r\n\tplaying: boolean;\r\n}\r\n\r\nexport class BLidge extends EventEmitter {\r\n\r\n\t// ws\r\n\r\n\tprivate url?: string;\r\n\tprivate ws?: WebSocket;\r\n\tpublic connected: boolean = false;\r\n\r\n\t// frame\r\n\r\n\tpublic frame: BLidgeSceneFrame = {\r\n\t\tstart: - 1,\r\n\t\tend: - 1,\r\n\t\tcurrent: - 1,\r\n\t\tfps: - 1,\r\n\t\tplaying: false,\r\n\t};\r\n\r\n\t// animation\r\n\r\n\tpublic objects: BLidgeObject[] = [];\r\n\tpublic curveGroups: FCurveGroup[] = [];\r\n\tpublic scene: BLidgeObject | null;\r\n\r\n\tconstructor( url?: string ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scene = null;\r\n\r\n\t\tif ( url ) {\r\n\r\n\t\t\tthis.url = url;\r\n\t\t\tthis.connect( this.url );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic connect( url: string ) {\r\n\r\n\t\tthis.url = url;\r\n\t\tthis.ws = new WebSocket( this.url );\r\n\t\tthis.ws.onopen = this.onOpen.bind( this );\r\n\t\tthis.ws.onmessage = this.onMessage.bind( this );\r\n\t\tthis.ws.onclose = this.onClose.bind( this );\r\n\r\n\t\tthis.ws.onerror = ( e ) => {\r\n\r\n\t\t\tconsole.error( e );\r\n\r\n\t\t\tthis.emit( 'error' );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tpublic loadJsonScene( jsonPath: string ) {\r\n\r\n\t\tconst req = new XMLHttpRequest();\r\n\r\n\t\treq.onreadystatechange = () => {\r\n\r\n\t\t\tif ( req.readyState == 4 ) {\r\n\r\n\t\t\t\tif ( req.status == 200 ) {\r\n\r\n\t\t\t\t\tthis.loadScene( JSON.parse( req.response ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\treq.open( 'GET', jsonPath );\r\n\t\treq.send( );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tEvents\r\n\t-------------------------------*/\r\n\r\n\tpublic loadScene( data: BLidgeSceneData ) {\r\n\r\n\t\t// frame\r\n\r\n\t\tthis.frame.start = data.frame.start;\r\n\t\tthis.frame.end = data.frame.end;\r\n\t\tthis.frame.fps = data.frame.fps;\r\n\r\n\t\tthis.curveGroups.length = 0;\r\n\t\tthis.objects.length = 0;\r\n\r\n\t\t// actions\r\n\r\n\t\tconst fcurveGroupNames = Object.keys( data.animations );\r\n\r\n\t\tfor ( let i = 0; i < fcurveGroupNames.length; i ++ ) {\r\n\r\n\t\t\tconst fcurveGroupName = fcurveGroupNames[ i ];\r\n\t\t\tconst fcurveGroup = new FCurveGroup( fcurveGroupName );\r\n\r\n\t\t\tdata.animations[ fcurveGroupName ].forEach( fcurveData => {\r\n\r\n\t\t\t\tconst curve = new FCurve();\r\n\r\n\t\t\t\tcurve.set( fcurveData.keyframes.map( frame => {\r\n\r\n\t\t\t\t\tlet interpolation = {\r\n\t\t\t\t\t\t\"B\": \"BEZIER\",\r\n\t\t\t\t\t\t\"C\": \"CONSTANT\",\r\n\t\t\t\t\t\t\"L\": \"LINEAR\",\r\n\t\t\t\t\t}[frame.i];\r\n\r\n\t\t\t\t\treturn new FCurveKeyFrame( frame.c, frame.h_l, frame.h_r, interpolation as FCurveInterpolation);\r\n\r\n\t\t\t\t} ) );\r\n\r\n\t\t\t\tfcurveGroup.setFCurve( curve, fcurveData.axis );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tthis.curveGroups.push( fcurveGroup );\r\n\r\n\t\t}\r\n\r\n\t\t// objects\r\n\r\n\t\tthis.scene = data.scene;\r\n\r\n\t\tthis.objects.length = 0;\r\n\r\n\t\tconst _ = ( obj: BLidgeObject ) => {\r\n\r\n\t\t\tthis.objects.push( obj );\r\n\r\n\t\t\tobj.children.forEach( item => _( item ) );\r\n\r\n\t\t};\r\n\r\n\t\t_( this.scene );\r\n\r\n\t\t// dispatch event\r\n\r\n\t\tthis.emit( 'sync/scene', [ this ] );\r\n\r\n\t}\r\n\r\n\tprivate onSyncTimeline( data: BLidgeSceneFrame ) {\r\n\r\n\t\tthis.frame = data;\r\n\r\n\t\tthis.emit( 'sync/timeline', [ this.frame ] );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tWS Events\r\n\t-------------------------------*/\r\n\r\n\tprivate onOpen( event: Event ) {\r\n\r\n\t\tthis.connected = true;\r\n\r\n\t}\r\n\r\n\tprivate onMessage( e: MessageEvent ) {\r\n\r\n\t\tconst msg = JSON.parse( e.data ) as BLidgeMessage;\r\n\r\n\t\tif ( msg.type == 'sync/scene' ) {\r\n\r\n\t\t\tthis.loadScene( msg.data );\r\n\r\n\t\t} else if ( msg.type == \"sync/timeline\" ) {\r\n\r\n\t\t\tthis.onSyncTimeline( msg.data );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate onClose( e:CloseEvent ) {\r\n\r\n\t\tthis.disposeWS();\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tAPI\r\n\t-------------------------------*/\r\n\r\n\tpublic getCurveGroup( name: string ) {\r\n\r\n\t\treturn this.curveGroups.find( curve => curve.name == name );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tDispose\r\n\t-------------------------------*/\r\n\r\n\tpublic dispose() {\r\n\r\n\t\tthis.disposeWS();\r\n\r\n\t}\r\n\r\n\tpublic disposeWS() {\r\n\r\n\t\tif ( this.ws ) {\r\n\r\n\t\t\tthis.ws.close();\r\n\t\t\tthis.ws.onmessage = null;\r\n\t\t\tthis.ws.onclose = null;\r\n\t\t\tthis.ws.onopen = null;\r\n\r\n\t\t\tthis.connected = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n"],"names":["GLPowerVAO","gl","program","name","buffer","size","opt","attr","count","force","attribute","indexBuffer","cb","GLPowerProgram","vertexShaderSrc","fragmentShaderSrc","vs","fs","shaderSrc","type","shader","value","uniform","i","key","id","vao","GLPowerBuffer","data","usage","target","Vector","x","y","z","w","a","_a","_b","_c","_d","v","ax","ay","az","bx","by","bz","mat","elm","e11","e12","e13","e21","e22","e23","e31","e32","e33","xx","yy","zz","e14","e24","e34","e41","e42","e43","e44","ww","GLPowerTexture","param","img","unitNumber","src","callBack","resolve","reject","GLPowerFrameBuffer","textures","t","attachment","width_size","height","Power","GLPowerTransformFeedback","varyingIndex","fbBuffer","Matrix","fov","aspect","near","far","d","width","eye","up","zAxis","xAxis","yAxis","b","c","e","f","g","h","j","k","l","m","n","o","p","q","r","s","u","A","B","det","ivd","pos","qua","scale","position","xy","xz","xw","yz","yw","zw","elm2","dist","sum","tmp","array","Quaternion","euler","order","sx","sy","sz","cx","cy","cz","Geometry","keys","core","constructor","bufferType","power","attributes","CubeGeometry","depth","hx","hy","hz","posArray","normalArray","uvArray","indexArray","offset","CylinderGeometry","radiusTop","radiusBottom","radSegments","heightSegments","theta","radius","normal","side","PlaneGeometry","widthSegments","ru","lb","SphereGeometry","thetaI","segments","thetaJ","widthRadius","item","index","MipMapGeometry","indexOffset","ECS","world","entity","component","componentName","componentArray","systemName","system","now","deltaTime","query","entt","EventEmitter","event","args","tmpListener","listener","System","queries","entities","logicName","Bezier","calcBezierA","calcBezierB","calcBezierC","calcBezierSlope","calcBezier","subdiv","startT","endT","currentX","currentT","newton","slope","getBezierTfromX","cache","sample","diff","Easings","sigmoid","weight","e1","e2","smoothstep","min","max","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","bezier","c1","h1","h2","c2","cubicBezier","h1X","h1Y","h2X","h2Y","FCurve","frames","keyframe","frame","beforeKeyFrame","FCurveGroup","curve","axis","minStart","maxEnd","FCurveKeyFrame","coordinate","handleLeft","handleRight","interpolation","nextFrame","BLidge","url","jsonPath","req","fcurveGroupNames","fcurveGroupName","fcurveGroup","fcurveData","_","obj","msg"],"mappings":"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"}